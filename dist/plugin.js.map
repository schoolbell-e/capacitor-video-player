{"version":3,"file":"plugin.js","sources":["esm/index.js","esm/web-utils/videoplayer.js","esm/web.js"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst CapacitorVideoPlayer = registerPlugin('CapacitorVideoPlayer', {\n    web: () => import('./web').then(m => new m.CapacitorVideoPlayerWeb()),\n});\nexport * from './definitions';\nexport { CapacitorVideoPlayer };\n//# sourceMappingURL=index.js.map","import Hls from 'hls.js';\nexport class VideoPlayer {\n    constructor(mode, url, playerId, rate, exitOnEnd, loopOnEnd, container, zIndex, width, height) {\n        this.pipMode = false;\n        this._videoType = null;\n        this._videoContainer = null;\n        this._firstReadyToPlay = true;\n        this._isEnded = false;\n        this._videoRate = 1.0;\n        this._videoExitOnEnd = true;\n        this._videoLoopOnEnd = false;\n        this._url = url;\n        this._container = container;\n        this._mode = mode;\n        this._width = width ? width : 320;\n        this._height = height ? height : 180;\n        this._mode = mode;\n        this._videoRate = rate;\n        this._zIndex = zIndex ? zIndex : 1;\n        this._playerId = playerId;\n        this._videoExitOnEnd = exitOnEnd;\n        this._videoLoopOnEnd = loopOnEnd;\n    }\n    async initialize() {\n        // get the video type\n        const retB = this._getVideoType();\n        if (retB) {\n            // style the container\n            if (this._mode === 'fullscreen') {\n                this._container.style.position = 'absolute';\n                this._container.style.width = '100vw';\n                this._container.style.height = '100vh';\n            }\n            if (this._mode === 'embedded') {\n                this._container.style.position = 'relative';\n                this._container.style.width = this._width.toString() + 'px';\n                this._container.style.height = this._height.toString() + 'px';\n            }\n            this._container.style.left = '0';\n            this._container.style.top = '0';\n            this._container.style.display = 'flex';\n            this._container.style.alignItems = 'center';\n            this._container.style.justifyContent = 'center';\n            this._container.style.backgroundColor = '#000000';\n            this._container.style.zIndex = this._zIndex.toString();\n            const width = this._mode === 'fullscreen'\n                ? window.innerWidth /*this._container.offsetWidth*/\n                : this._width;\n            const height = this._mode === 'fullscreen'\n                ? window.innerHeight /*this._container.offsetHeight*/\n                : this._height;\n            const xmlns = 'http://www.w3.org/2000/svg';\n            const svg = document.createElementNS(xmlns, 'svg');\n            svg.setAttributeNS(null, 'width', width.toString());\n            svg.setAttributeNS(null, 'height', height.toString());\n            const viewbox = '0 0 ' + width.toString() + ' ' + height.toString();\n            svg.setAttributeNS(null, 'viewBox', viewbox);\n            svg.style.zIndex = (this._zIndex + 1).toString();\n            const rect = document.createElementNS(xmlns, 'rect');\n            rect.setAttributeNS(null, 'x', '0');\n            rect.setAttributeNS(null, 'y', '0');\n            rect.setAttributeNS(null, 'width', width.toString());\n            rect.setAttributeNS(null, 'height', height.toString());\n            rect.setAttributeNS(null, 'fill', '#000000');\n            svg.appendChild(rect);\n            this._container.appendChild(svg);\n            const heightVideo = (width * this._height) / this._width;\n            this._videoContainer = document.createElement('div');\n            this._videoContainer.style.position = 'absolute';\n            this._videoContainer.style.left = '0';\n            this._videoContainer.style.width = width.toString() + 'px';\n            this._videoContainer.style.height = heightVideo.toString() + 'px';\n            this._videoContainer.style.zIndex = (this._zIndex + 2).toString();\n            this._container.appendChild(this._videoContainer);\n            /*   Create Video Element */\n            const isCreated = await this.createVideoElement(width, heightVideo);\n            if (!isCreated) {\n                this._createEvent('Exit', this._playerId, 'Video Error: failed to create the Video Element');\n            }\n        }\n        else {\n            this._createEvent('Exit', this._playerId, 'Url Error: type not supported');\n        }\n        return;\n    }\n    async createVideoElement(width, height) {\n        this.videoEl = document.createElement('video');\n        this.videoEl.controls = true;\n        this.videoEl.style.zIndex = (this._zIndex + 3).toString();\n        this.videoEl.style.width = `${width.toString()}px`;\n        this.videoEl.style.height = `${height.toString()}px`;\n        this.videoEl.playbackRate = this._videoRate;\n        this._videoContainer.appendChild(this.videoEl);\n        // set the player\n        const isSet = await this._setPlayer();\n        if (isSet) {\n            this.videoEl.onended = async () => {\n                this._isEnded = true;\n                this.isPlaying = false;\n                if (this.videoEl) {\n                    this.videoEl.currentTime = 0;\n                }\n                if (this._videoExitOnEnd) {\n                    if (this._mode === 'fullscreen') {\n                        this._closeFullscreen();\n                    }\n                    this._createEvent('Ended', this._playerId);\n                }\n                else {\n                    if (this._videoLoopOnEnd && this.videoEl != null) {\n                        await this.videoEl.play();\n                    }\n                }\n            };\n            this.videoEl.oncanplay = async () => {\n                if (this._firstReadyToPlay) {\n                    this._createEvent('Ready', this._playerId);\n                    if (this.videoEl != null) {\n                        this.videoEl.muted = false;\n                        if (this._mode === 'fullscreen')\n                            await this.videoEl.play();\n                        this._firstReadyToPlay = false;\n                    }\n                }\n            };\n            this.videoEl.onplay = () => {\n                this.isPlaying = true;\n                if (this._firstReadyToPlay)\n                    this._firstReadyToPlay = false;\n                this._createEvent('Play', this._playerId);\n            };\n            this.videoEl.onplaying = () => {\n                this._createEvent('Playing', this._playerId);\n            };\n            this.videoEl.onpause = () => {\n                this.isPlaying = false;\n                this._createEvent('Pause', this._playerId);\n            };\n            if (this._mode === 'fullscreen') {\n                // create the video player exit button\n                const exitEl = document.createElement('button');\n                exitEl.textContent = 'X';\n                exitEl.style.position = 'absolute';\n                exitEl.style.left = '1%';\n                exitEl.style.top = '5%';\n                exitEl.style.width = '5vmin';\n                exitEl.style.padding = '0.5%';\n                exitEl.style.fontSize = '1.2rem';\n                exitEl.style.background = 'rgba(51,51,51,.4)';\n                exitEl.style.color = '#fff';\n                exitEl.style.visibility = 'hidden';\n                exitEl.style.zIndex = (this._zIndex + 4).toString();\n                exitEl.style.border = '1px solid rgba(51,51,51,.4)';\n                exitEl.style.borderRadius = '20px';\n                this._videoContainer.onclick = async () => {\n                    this._initial = await this._doHide(exitEl, 3000);\n                };\n                this._videoContainer.ontouchstart = async () => {\n                    this._initial = await this._doHide(exitEl, 3000);\n                };\n                this._videoContainer.onmousemove = async () => {\n                    this._initial = await this._doHide(exitEl, 3000);\n                };\n                exitEl.onclick = () => {\n                    this._createEvent('Exit', this._playerId);\n                };\n                exitEl.ontouchstart = () => {\n                    this._createEvent('Exit', this._playerId);\n                };\n                this._videoContainer.appendChild(exitEl);\n                this._initial = await this._doHide(exitEl, 3000);\n                this._goFullscreen();\n            }\n        }\n        return isSet;\n    }\n    async _goFullscreen() {\n        if (this._container.mozRequestFullScreen) {\n            /* Firefox */\n            this._container.mozRequestFullScreen();\n        }\n        else if (this._container.webkitRequestFullscreen) {\n            /* Chrome, Safari & Opera */\n            this._container.webkitRequestFullscreen();\n        }\n        else if (this._container.msRequestFullscreen) {\n            /* IE/Edge */\n            this._container.msRequestFullscreen();\n        }\n        else if (this._container.requestFullscreen) {\n            this._container.requestFullscreen();\n        }\n        return;\n    }\n    async _setPlayer() {\n        return new Promise(resolve => {\n            if (this.videoEl != null) {\n                if (Hls.isSupported() && this._videoType === 'application/x-mpegURL') {\n                    const hls = new Hls();\n                    hls.loadSource(this._url);\n                    hls.attachMedia(this.videoEl);\n                    hls.on(Hls.Events.MANIFEST_PARSED, () => {\n                        if (this.videoEl != null) {\n                            this.videoEl.muted = true;\n                            this.videoEl.crossOrigin = 'anonymous';\n                            resolve(true);\n                        }\n                        else {\n                            resolve(false);\n                        }\n                    });\n                }\n                else if (this._videoType === 'video/mp4') {\n                    // CMAF (fMP4) && MP4\n                    this.videoEl.src = this._url;\n                    if (this._url.substring(0, 5) != 'https' &&\n                        this._url.substring(0, 4) === 'http')\n                        this.videoEl.crossOrigin = 'anonymous';\n                    if (this._url.substring(0, 5) === 'https' ||\n                        this._url.substring(0, 4) === 'http')\n                        this.videoEl.muted = true;\n                    resolve(true);\n                }\n                else {\n                    // Not Supported\n                    resolve(false);\n                }\n                this.videoEl.addEventListener('enterpictureinpicture', (event) => {\n                    this.pipWindow = event.pictureInPictureWindow;\n                    this.pipMode = true;\n                    this._closeFullscreen();\n                });\n                this.videoEl.addEventListener('leavepictureinpicture', () => {\n                    this.pipMode = false;\n                    if (!this._isEnded) {\n                        this._goFullscreen();\n                        if (this.videoEl != null)\n                            this.videoEl.play();\n                    }\n                });\n            }\n            else {\n                resolve(false);\n            }\n        });\n    }\n    _getVideoType() {\n        let ret = false;\n        let vType = '';\n        const sUrl = this._url ? this._url : '';\n        if (sUrl != null && sUrl.length > 0) {\n            try {\n                const val = sUrl.substring(sUrl.lastIndexOf('/')).match(/(.*)\\.(.*)/);\n                if (val == null) {\n                    vType = '';\n                }\n                else {\n                    const a = sUrl.match(/(.*)\\.(.*)/);\n                    vType = a != null ? a[2].split('?')[0] : '';\n                }\n                switch (vType) {\n                    case 'mp4':\n                    case '':\n                    case 'webm':\n                    case 'cmaf':\n                    case 'cmfv':\n                    case 'cmfa': {\n                        this._videoType = 'video/mp4';\n                        break;\n                    }\n                    case 'm3u8': {\n                        this._videoType = 'application/x-mpegURL';\n                        break;\n                    }\n                    /*\n                            case \"mpd\" : {\n                            this._videoType = \"application/dash+xml\";\n                            break;\n                            }\n                    */\n                    /*\n                            case \"youtube\" : {\n                            this._videoType = \"video/youtube\";\n                            break;\n                            }\n                    */\n                    default: {\n                        this._videoType = null;\n                        break;\n                    }\n                }\n                ret = true;\n            }\n            catch (_a) {\n                ret = false;\n            }\n        }\n        return ret;\n    }\n    async _doHide(exitEl, duration) {\n        clearTimeout(this._initial);\n        exitEl.style.visibility = 'visible';\n        const initial = setTimeout(() => {\n            exitEl.style.visibility = 'hidden';\n        }, duration);\n        return initial;\n    }\n    _createEvent(ev, playerId, msg) {\n        const message = msg ? msg : null;\n        let event;\n        if (message != null) {\n            event = new CustomEvent(`videoPlayer${ev}`, {\n                detail: { fromPlayerId: playerId, message: message },\n            });\n        }\n        else {\n            const currentTime = this.videoEl ? this.videoEl.currentTime : 0;\n            event = new CustomEvent(`videoPlayer${ev}`, {\n                detail: { fromPlayerId: playerId, currentTime: currentTime },\n            });\n        }\n        document.dispatchEvent(event);\n    }\n    _closeFullscreen() {\n        const mydoc = document;\n        const isInFullScreen = (mydoc.fullscreenElement && mydoc.fullscreenElement !== null) ||\n            (mydoc.webkitFullscreenElement &&\n                mydoc.webkitFullscreenElement !== null) ||\n            (mydoc.mozFullScreenElement && mydoc.mozFullScreenElement !== null) ||\n            (mydoc.msFullscreenElement && mydoc.msFullscreenElement !== null);\n        if (isInFullScreen) {\n            if (mydoc.mozCancelFullScreen) {\n                mydoc.mozCancelFullScreen();\n            }\n            else if (mydoc.webkitExitFullscreen) {\n                mydoc.webkitExitFullscreen();\n            }\n            else if (mydoc.msExitFullscreen) {\n                mydoc.msExitFullscreen();\n            }\n            else if (mydoc.exitFullscreen) {\n                mydoc.exitFullscreen();\n            }\n        }\n    }\n}\n//# sourceMappingURL=videoplayer.js.map","import { WebPlugin } from '@capacitor/core';\nimport { VideoPlayer } from './web-utils/videoplayer';\nexport class CapacitorVideoPlayerWeb extends WebPlugin {\n    constructor() {\n        super();\n        this._players = [];\n        this.addListeners();\n    }\n    async echo(options) {\n        return Promise.resolve({ result: true, method: 'echo', value: options });\n    }\n    /**\n     *  Player initialization\n     *\n     * @param options\n     */\n    async initPlayer(options) {\n        if (options == null) {\n            return Promise.resolve({\n                result: false,\n                method: 'initPlayer',\n                message: 'Must provide a capVideoPlayerOptions object',\n            });\n        }\n        this.mode = options.mode ? options.mode : '';\n        if (this.mode == null || this.mode.length === 0) {\n            return Promise.resolve({\n                result: false,\n                method: 'initPlayer',\n                message: 'Must provide a Mode (fullscreen/embedded)',\n            });\n        }\n        if (this.mode === 'fullscreen' || this.mode === 'embedded') {\n            const url = options.url ? options.url : '';\n            if (url == null || url.length === 0) {\n                return Promise.resolve({\n                    result: false,\n                    method: 'initPlayer',\n                    message: 'Must provide a Video Url',\n                });\n            }\n            if (url == 'internal') {\n                return Promise.resolve({\n                    result: false,\n                    method: 'initPlayer',\n                    message: 'Internal Videos not supported on Web Platform',\n                });\n            }\n            const playerId = options.playerId ? options.playerId : '';\n            if (playerId == null || playerId.length === 0) {\n                return Promise.resolve({\n                    result: false,\n                    method: 'initPlayer',\n                    message: 'Must provide a Player Id',\n                });\n            }\n            const rate = options.rate ? options.rate : 1.0;\n            let exitOnEnd = true;\n            if (Object.keys(options).includes('exitOnEnd')) {\n                const exitRet = options.exitOnEnd;\n                exitOnEnd = exitRet != null ? exitRet : true;\n            }\n            let loopOnEnd = false;\n            if (Object.keys(options).includes('loopOnEnd') && !exitOnEnd) {\n                const loopRet = options.loopOnEnd;\n                loopOnEnd = loopRet != null ? loopRet : false;\n            }\n            const componentTag = options.componentTag\n                ? options.componentTag\n                : '';\n            if (componentTag == null || componentTag.length === 0) {\n                return Promise.resolve({\n                    result: false,\n                    method: 'initPlayer',\n                    message: 'Must provide a Component Tag',\n                });\n            }\n            let playerSize = null;\n            if (this.mode === 'embedded') {\n                playerSize = this.checkSize(options);\n            }\n            const result = await this._initializeVideoPlayer(url, playerId, this.mode, rate, exitOnEnd, loopOnEnd, componentTag, playerSize);\n            return Promise.resolve({ result: result });\n        }\n        else {\n            return Promise.resolve({\n                result: false,\n                method: 'initPlayer',\n                message: 'Must provide a Mode either fullscreen or embedded)',\n            });\n        }\n    }\n    /**\n     * Return if a given playerId is playing\n     *\n     * @param options\n     */\n    async isPlaying(options) {\n        if (options == null) {\n            return Promise.resolve({\n                result: false,\n                method: 'isPlaying',\n                message: 'Must provide a capVideoPlayerIdOptions object',\n            });\n        }\n        let playerId = options.playerId ? options.playerId : '';\n        if (playerId == null || playerId.length === 0) {\n            playerId = 'fullscreen';\n        }\n        if (this._players[playerId]) {\n            const playing = this._players[playerId].isPlaying;\n            return Promise.resolve({\n                method: 'isPlaying',\n                result: true,\n                value: playing,\n            });\n        }\n        else {\n            return Promise.resolve({\n                method: 'isPlaying',\n                result: false,\n                message: 'Given PlayerId does not exist)',\n            });\n        }\n    }\n    /**\n     * Play the current video from a given playerId\n     *\n     * @param options\n     */\n    async play(options) {\n        if (options == null) {\n            return Promise.resolve({\n                result: false,\n                method: 'play',\n                message: 'Must provide a capVideoPlayerIdOptions object',\n            });\n        }\n        let playerId = options.playerId ? options.playerId : '';\n        if (playerId == null || playerId.length === 0) {\n            playerId = 'fullscreen';\n        }\n        if (this._players[playerId]) {\n            await this._players[playerId].videoEl.play();\n            return Promise.resolve({ method: 'play', result: true, value: true });\n        }\n        else {\n            return Promise.resolve({\n                method: 'play',\n                result: false,\n                message: 'Given PlayerId does not exist)',\n            });\n        }\n    }\n    /**\n     * Pause the current video from a given playerId\n     *\n     * @param options\n     */\n    async pause(options) {\n        if (options == null) {\n            return Promise.resolve({\n                result: false,\n                method: 'pause',\n                message: 'Must provide a capVideoPlayerIdOptions object',\n            });\n        }\n        let playerId = options.playerId ? options.playerId : '';\n        if (playerId == null || playerId.length === 0) {\n            playerId = 'fullscreen';\n        }\n        if (this._players[playerId]) {\n            if (this._players[playerId].isPlaying)\n                await this._players[playerId].videoEl.pause();\n            return Promise.resolve({ method: 'pause', result: true, value: true });\n        }\n        else {\n            return Promise.resolve({\n                method: 'pause',\n                result: false,\n                message: 'Given PlayerId does not exist)',\n            });\n        }\n    }\n    /**\n     * Get the duration of the current video from a given playerId\n     *\n     * @param options\n     */\n    async getDuration(options) {\n        if (options == null) {\n            return Promise.resolve({\n                result: false,\n                method: 'getDuration',\n                message: 'Must provide a capVideoPlayerIdOptions object',\n            });\n        }\n        let playerId = options.playerId ? options.playerId : '';\n        if (playerId == null || playerId.length === 0) {\n            playerId = 'fullscreen';\n        }\n        if (this._players[playerId]) {\n            const duration = this._players[playerId].videoEl.duration;\n            return Promise.resolve({\n                method: 'getDuration',\n                result: true,\n                value: duration,\n            });\n        }\n        else {\n            return Promise.resolve({\n                method: 'getDuration',\n                result: false,\n                message: 'Given PlayerId does not exist)',\n            });\n        }\n    }\n    /**\n     * Set the rate of the current video from a given playerId\n     *\n     * @param options\n     */\n    async setRate(options) {\n        if (options == null) {\n            return Promise.resolve({\n                result: false,\n                method: 'setRate',\n                message: 'Must provide a capVideoRateOptions object',\n            });\n        }\n        let playerId = options.playerId ? options.playerId : '';\n        if (playerId == null || playerId.length === 0) {\n            playerId = 'fullscreen';\n        }\n        const rateList = [0.25, 0.5, 0.75, 1.0, 2.0, 4.0];\n        const rate = options.rate && rateList.includes(options.rate) ? options.rate : 1.0;\n        if (this._players[playerId]) {\n            this._players[playerId].videoEl.playbackRate = rate;\n            return Promise.resolve({\n                method: 'setRate',\n                result: true,\n                value: rate,\n            });\n        }\n        else {\n            return Promise.resolve({\n                method: 'setRate',\n                result: false,\n                message: 'Given PlayerId does not exist)',\n            });\n        }\n    }\n    /**\n     * Get the volume of the current video from a given playerId\n     *\n     * @param options\n     */\n    async getRate(options) {\n        if (options == null) {\n            return Promise.resolve({\n                result: false,\n                method: 'getRate',\n                message: 'Must provide a capVideoPlayerIdOptions object',\n            });\n        }\n        let playerId = options.playerId ? options.playerId : '';\n        if (playerId == null || playerId.length === 0) {\n            playerId = 'fullscreen';\n        }\n        if (this._players[playerId]) {\n            const rate = this._players[playerId].videoEl.playbackRate;\n            return Promise.resolve({\n                method: 'getRate',\n                result: true,\n                value: rate,\n            });\n        }\n        else {\n            return Promise.resolve({\n                method: 'getRate',\n                result: false,\n                message: 'Given PlayerId does not exist)',\n            });\n        }\n    }\n    /**\n     * Set the volume of the current video from a given playerId\n     *\n     * @param options\n     */\n    async setVolume(options) {\n        if (options == null) {\n            return Promise.resolve({\n                result: false,\n                method: 'setVolume',\n                message: 'Must provide a capVideoVolumeOptions object',\n            });\n        }\n        let playerId = options.playerId ? options.playerId : '';\n        if (playerId == null || playerId.length === 0) {\n            playerId = 'fullscreen';\n        }\n        const volume = options.volume ? options.volume : 0.5;\n        if (this._players[playerId]) {\n            this._players[playerId].videoEl.volume = volume;\n            return Promise.resolve({\n                method: 'setVolume',\n                result: true,\n                value: volume,\n            });\n        }\n        else {\n            return Promise.resolve({\n                method: 'setVolume',\n                result: false,\n                message: 'Given PlayerId does not exist)',\n            });\n        }\n    }\n    /**\n     * Get the volume of the current video from a given playerId\n     *\n     * @param options\n     */\n    async getVolume(options) {\n        if (options == null) {\n            return Promise.resolve({\n                result: false,\n                method: 'getVolume',\n                message: 'Must provide a capVideoPlayerIdOptions object',\n            });\n        }\n        let playerId = options.playerId ? options.playerId : '';\n        if (playerId == null || playerId.length === 0) {\n            playerId = 'fullscreen';\n        }\n        if (this._players[playerId]) {\n            const volume = this._players[playerId].videoEl.volume;\n            return Promise.resolve({\n                method: 'getVolume',\n                result: true,\n                value: volume,\n            });\n        }\n        else {\n            return Promise.resolve({\n                method: 'getVolume',\n                result: false,\n                message: 'Given PlayerId does not exist)',\n            });\n        }\n    }\n    /**\n     * Set the muted property of the current video from a given playerId\n     *\n     * @param options\n     */\n    async setMuted(options) {\n        if (options == null) {\n            return Promise.resolve({\n                result: false,\n                method: 'setMuted',\n                message: 'Must provide a capVideoMutedOptions object',\n            });\n        }\n        let playerId = options.playerId ? options.playerId : '';\n        if (playerId == null || playerId.length === 0) {\n            playerId = 'fullscreen';\n        }\n        const muted = options.muted ? options.muted : false;\n        if (this._players[playerId]) {\n            this._players[playerId].videoEl.muted = muted;\n            return Promise.resolve({\n                method: 'setMuted',\n                result: true,\n                value: muted,\n            });\n        }\n        else {\n            return Promise.resolve({\n                method: 'setMuted',\n                result: false,\n                message: 'Given PlayerId does not exist)',\n            });\n        }\n    }\n    /**\n     * Get the muted property of the current video from a given playerId\n     *\n     * @param options\n     */\n    async getMuted(options) {\n        if (options == null) {\n            return Promise.resolve({\n                result: false,\n                method: 'getMuted',\n                message: 'Must provide a capVideoPlayerIdOptions object',\n            });\n        }\n        let playerId = options.playerId ? options.playerId : '';\n        if (playerId == null || playerId.length === 0) {\n            playerId = 'fullscreen';\n        }\n        if (this._players[playerId]) {\n            const muted = this._players[playerId].videoEl.muted;\n            return Promise.resolve({\n                method: 'getMuted',\n                result: true,\n                value: muted,\n            });\n        }\n        else {\n            return Promise.resolve({\n                method: 'getMuted',\n                result: false,\n                message: 'Given PlayerId does not exist)',\n            });\n        }\n    }\n    /**\n     * Set the current time of the current video from a given playerId\n     *\n     * @param options\n     */\n    async setCurrentTime(options) {\n        if (options == null) {\n            return Promise.resolve({\n                result: false,\n                method: 'setCurrentTime',\n                message: 'Must provide a capVideoTimeOptions object',\n            });\n        }\n        let playerId = options.playerId ? options.playerId : '';\n        if (playerId == null || playerId.length === 0) {\n            playerId = 'fullscreen';\n        }\n        let seekTime = options.seektime ? options.seektime : 0;\n        if (this._players[playerId]) {\n            const duration = this._players[playerId].videoEl.duration;\n            seekTime =\n                seekTime <= duration && seekTime >= 0 ? seekTime : duration / 2;\n            this._players[playerId].videoEl.currentTime = seekTime;\n            return Promise.resolve({\n                method: 'setCurrentTime',\n                result: true,\n                value: seekTime,\n            });\n        }\n        else {\n            return Promise.resolve({\n                method: 'setCurrentTime',\n                result: false,\n                message: 'Given PlayerId does not exist)',\n            });\n        }\n    }\n    /**\n     * Get the current time of the current video from a given playerId\n     *\n     * @param options\n     */\n    async getCurrentTime(options) {\n        if (options == null) {\n            return Promise.resolve({\n                result: false,\n                method: 'getCurrentTime',\n                message: 'Must provide a capVideoPlayerIdOptions object',\n            });\n        }\n        let playerId = options.playerId ? options.playerId : '';\n        if (playerId == null || playerId.length === 0) {\n            playerId = 'fullscreen';\n        }\n        if (this._players[playerId]) {\n            const seekTime = this._players[playerId].videoEl.currentTime;\n            return Promise.resolve({\n                method: 'getCurrentTime',\n                result: true,\n                value: seekTime,\n            });\n        }\n        else {\n            return Promise.resolve({\n                method: 'getCurrentTime',\n                result: false,\n                message: 'Given PlayerId does not exist)',\n            });\n        }\n    }\n    /**\n     * Get the current time of the current video from a given playerId\n     *\n     */\n    async stopAllPlayers() {\n        for (const i in this._players) {\n            if (this._players[i].pipMode) {\n                const doc = document;\n                if (doc.pictureInPictureElement) {\n                    await doc.exitPictureInPicture();\n                }\n            }\n            if (!this._players[i].videoEl.paused)\n                this._players[i].videoEl.pause();\n        }\n        return Promise.resolve({\n            method: 'stopAllPlayers',\n            result: true,\n            value: true,\n        });\n    }\n    /**\n     * Show controller\n     *\n     */\n    async showController() {\n        return Promise.resolve({\n            method: 'showController',\n            result: true,\n            value: true,\n        });\n    }\n    /**\n     * isControllerIsFullyVisible\n     *\n     */\n    async isControllerIsFullyVisible() {\n        return Promise.resolve({\n            method: 'isControllerIsFullyVisible',\n            result: true,\n            value: true,\n        });\n    }\n    /**\n     * Exit the current player\n     *\n     */\n    async exitPlayer() {\n        return Promise.resolve({\n            method: 'exitPlayer',\n            result: true,\n            value: true,\n        });\n    }\n    checkSize(options) {\n        const playerSize = {\n            width: options.width ? options.width : 320,\n            height: options.height ? options.height : 180,\n        };\n        const ratio = playerSize.height / playerSize.width;\n        if (playerSize.width > window.innerWidth) {\n            playerSize.width = window.innerWidth;\n            playerSize.height = Math.floor(playerSize.width * ratio);\n        }\n        if (playerSize.height > window.innerHeight) {\n            playerSize.height = window.innerHeight;\n            playerSize.width = Math.floor(playerSize.height / ratio);\n        }\n        return playerSize;\n    }\n    async _initializeVideoPlayer(url, playerId, mode, rate, exitOnEnd, loopOnEnd, componentTag, playerSize) {\n        const videoURL = url\n            ? url.indexOf('%2F') == -1\n                ? encodeURI(url)\n                : url\n            : null;\n        if (videoURL === null)\n            return Promise.resolve(false);\n        this.videoContainer =\n            await this._getContainerElement(playerId, componentTag);\n        if (this.videoContainer === null)\n            return Promise.resolve({\n                method: 'initPlayer',\n                result: false,\n                message: 'componentTag or divContainerElement must be provided',\n            });\n        if (mode === 'embedded' && playerSize == null)\n            return Promise.resolve({\n                method: 'initPlayer',\n                result: false,\n                message: 'playerSize must be defined in embedded mode',\n            });\n        if (mode === 'embedded') {\n            this._players[playerId] = new VideoPlayer('embedded', videoURL, playerId, rate, exitOnEnd, loopOnEnd, this.videoContainer, 2, playerSize.width, playerSize.height);\n            await this._players[playerId].initialize();\n        }\n        else if (mode === 'fullscreen') {\n            this._players['fullscreen'] = new VideoPlayer('fullscreen', videoURL, 'fullscreen', rate, exitOnEnd, loopOnEnd, this.videoContainer, 99995);\n            await this._players['fullscreen'].initialize();\n        }\n        else {\n            return Promise.resolve({\n                method: 'initPlayer',\n                result: false,\n                message: 'mode not supported',\n            });\n        }\n        return Promise.resolve({ method: 'initPlayer', result: true, value: true });\n    }\n    async _getContainerElement(playerId, componentTag) {\n        const videoContainer = document.createElement('div');\n        videoContainer.id = `vc_${playerId}`;\n        if (componentTag != null && componentTag.length > 0) {\n            const cmpTagEl = document.querySelector(`${componentTag}`);\n            if (cmpTagEl === null)\n                return Promise.resolve(null);\n            let container = null;\n            const shadowRoot = cmpTagEl.shadowRoot ? cmpTagEl.shadowRoot : null;\n            if (shadowRoot != null) {\n                container = shadowRoot.querySelector(`[id='${playerId}']`);\n            }\n            else {\n                container = cmpTagEl.querySelector(`[id='${playerId}']`);\n            }\n            if (container != null)\n                container.appendChild(videoContainer);\n            return Promise.resolve(videoContainer);\n        }\n        else {\n            return Promise.resolve(null);\n        }\n    }\n    handlePlayerPlay(data) {\n        this.notifyListeners('jeepCapVideoPlayerPlay', data);\n    }\n    handlePlayerPause(data) {\n        this.notifyListeners('jeepCapVideoPlayerPause', data);\n    }\n    handlePlayerEnded(data) {\n        var _a;\n        if (this.mode === 'fullscreen') {\n            (_a = this.videoContainer) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.removeListeners();\n        this.notifyListeners('jeepCapVideoPlayerEnded', data);\n    }\n    handlePlayerExit() {\n        var _a;\n        if (this.mode === 'fullscreen') {\n            (_a = this.videoContainer) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        const retData = { dismiss: true };\n        this.removeListeners();\n        this.notifyListeners('jeepCapVideoPlayerExit', retData);\n    }\n    handlePlayerReady(data) {\n        this.notifyListeners('jeepCapVideoPlayerReady', data);\n    }\n    addListeners() {\n        document.addEventListener('videoPlayerPlay', (ev) => {\n            this.handlePlayerPlay(ev.detail);\n        }, false);\n        document.addEventListener('videoPlayerPause', (ev) => {\n            this.handlePlayerPause(ev.detail);\n        }, false);\n        document.addEventListener('videoPlayerEnded', (ev) => {\n            this.handlePlayerEnded(ev.detail);\n        }, false);\n        document.addEventListener('videoPlayerReady', (ev) => {\n            this.handlePlayerReady(ev.detail);\n        }, false);\n        document.addEventListener('videoPlayerExit', () => {\n            this.handlePlayerExit();\n        }, false);\n    }\n    removeListeners() {\n        document.removeEventListener('videoPlayerPlay', (ev) => {\n            this.handlePlayerPlay(ev.detail);\n        }, false);\n        document.removeEventListener('videoPlayerPause', (ev) => {\n            this.handlePlayerPause(ev.detail);\n        }, false);\n        document.removeEventListener('videoPlayerEnded', (ev) => {\n            this.handlePlayerEnded(ev.detail);\n        }, false);\n        document.removeEventListener('videoPlayerReady', (ev) => {\n            this.handlePlayerReady(ev.detail);\n        }, false);\n        document.removeEventListener('videoPlayerExit', () => {\n            this.handlePlayerExit();\n        }, false);\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","Hls","WebPlugin"],"mappings":"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"}